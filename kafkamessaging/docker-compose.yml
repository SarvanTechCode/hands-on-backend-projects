services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: kafkamessaging-zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zk-data:/var/lib/zookeeper/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc -w 5 localhost 2181 | grep imok || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafkamessaging-kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092 >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 10s

  app:
    build: .
    container_name: kafkamessaging-app-1
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS"
    restart: unless-stopped

volumes:
  kafka-data:
  zk-data:
